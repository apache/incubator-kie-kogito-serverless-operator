// Licensed to the Apache Software Foundation (ASF) under one
// or more contributor license agreements.  See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership.  The ASF licenses this file
// to you under the Apache License, Version 2.0 (the
// "License"); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.
// Code generated by client-gen. DO NOT EDIT.

package v1alpha08

import (
	"context"

	v1alpha08 "github.com/apache/incubator-kie-kogito-serverless-operator/workflowproj-apiserver/pkg/apis/workflowproj/v1alpha08"
	scheme "github.com/apache/incubator-kie-kogito-serverless-operator/workflowproj-apiserver/pkg/generated/clientset/scheme"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	rest "k8s.io/client-go/rest"
)

// SonataFlowProjInstancesGetter has a method to return a SonataFlowProjInstanceInterface.
// A group's client should implement this interface.
type SonataFlowProjInstancesGetter interface {
	SonataFlowProjInstances(namespace string) SonataFlowProjInstanceInterface
}

// SonataFlowProjInstanceInterface has methods to work with SonataFlowProjInstance resources.
type SonataFlowProjInstanceInterface interface {
	Get(ctx context.Context, name string, opts v1.GetOptions) (*v1alpha08.SonataFlowProjInstance, error)
	SonataFlowProjInstanceExpansion
}

// sonataFlowProjInstances implements SonataFlowProjInstanceInterface
type sonataFlowProjInstances struct {
	client rest.Interface
	ns     string
}

// newSonataFlowProjInstances returns a SonataFlowProjInstances
func newSonataFlowProjInstances(c *WorkflowprojV1alpha08Client, namespace string) *sonataFlowProjInstances {
	return &sonataFlowProjInstances{
		client: c.RESTClient(),
		ns:     namespace,
	}
}

// Get takes name of the sonataFlowProjInstance, and returns the corresponding sonataFlowProjInstance object, and an error if there is any.
func (c *sonataFlowProjInstances) Get(ctx context.Context, name string, options v1.GetOptions) (result *v1alpha08.SonataFlowProjInstance, err error) {
	result = &v1alpha08.SonataFlowProjInstance{}
	err = c.client.Get().
		Namespace(c.ns).
		Resource("sonataflowprojinstances").
		Name(name).
		VersionedParams(&options, scheme.ParameterCodec).
		Do(ctx).
		Into(result)
	return
}
