// Licensed to the Apache Software Foundation (ASF) under one
// or more contributor license agreements.  See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership.  The ASF licenses this file
// to you under the Apache License, Version 2.0 (the
// "License"); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.
// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	"context"

	v1alpha08 "github.com/apache/incubator-kie-kogito-serverless-operator/workflowproj-apiserver/pkg/apis/workflowproj/v1alpha08"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	testing "k8s.io/client-go/testing"
)

// FakeSonataFlowProjInstances implements SonataFlowProjInstanceInterface
type FakeSonataFlowProjInstances struct {
	Fake *FakeWorkflowprojV1alpha08
	ns   string
}

var sonataflowprojinstancesResource = v1alpha08.SchemeGroupVersion.WithResource("sonataflowprojinstances")

var sonataflowprojinstancesKind = v1alpha08.SchemeGroupVersion.WithKind("SonataFlowProjInstance")

// Get takes name of the sonataFlowProjInstance, and returns the corresponding sonataFlowProjInstance object, and an error if there is any.
func (c *FakeSonataFlowProjInstances) Get(ctx context.Context, name string, options v1.GetOptions) (result *v1alpha08.SonataFlowProjInstance, err error) {
	obj, err := c.Fake.
		Invokes(testing.NewGetAction(sonataflowprojinstancesResource, c.ns, name), &v1alpha08.SonataFlowProjInstance{})

	if obj == nil {
		return nil, err
	}
	return obj.(*v1alpha08.SonataFlowProjInstance), err
}
