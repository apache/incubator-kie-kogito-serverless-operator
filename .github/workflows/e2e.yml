name: E2E checks
on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    paths-ignore:
      - "LICENSE"
      - "**/.gitignore"
      - "**.md"
      - "**.adoc"
      - "*.txt"
      - "docsimg/**"
      - ".ci/jenkins/**"

env:
  GO_VERSION: 1.19
  # Kubernetes version should aligned with OCP LTS, aka OCP 4.10 (k8s 1.23) for now
  # https://github.com/kubernetes/kubernetes/blob/master/CHANGELOG/CHANGELOG-1.23.md
  # WARNING: kindest/node is not always existing with given version ...
  KUBERNETES_VERSION: v1.23.13

jobs:
  e2e:
    concurrency:
      group: kogito-serverless-operator-e2e-tests-${{ github.head_ref }}
      cancel-in-progress: true
    timeout-minutes: 120
    runs-on: ubuntu-latest
    name: End-to-end tests (Minikube)
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true

      - name: Setup Minikube cluster
        uses: medyagh/setup-minikube@latest
        with:
          addons: registry,metrics-server
          kubernetes-version: ${{ env.KUBERNETES_VERSION }}
          # https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners#supported-runners-and-hardware-resources
          cpu: max
          memory: max
      
      - name: Retrieve Minikube regsitry
        run: |
          minikube_registry="$(minikube ip):5000"
          echo "MINIKUBE_REGISTRY=${minikube_registry}" >> $GITHUB_ENV
          echo "OPERATOR_IMAGE_NAME=${minikube_registry}/kogito-serverless-operator:0.0.1" >> $GITHUB_ENV
      
      - name: Build operator image
        run: |
          make container-build BUILDER=podman IMG=${{ env.OPERATOR_IMAGE_NAME }}

      - name: Load image in Minikube
        run: |
          podman push --tls-verify=false ${{ env.OPERATOR_IMAGE_NAME }}

      - name: Check pods
        run: |
          kubectl version
          kubectl get pods -A

      - name: Run tests
        run: |
          make test-e2e
